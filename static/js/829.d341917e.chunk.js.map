{"version":3,"file":"static/js/829.d341917e.chunk.js","mappings":"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","sources":["pages/ShoppingCartPage/ShoppingCartPage.styled.js","schemas/FormSchema/FormSchema.js","components/UserForm/UserForm.styled.js","images/sprite.svg","components/UserForm/UserForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx","pages/ShopsPage/ShopsPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ShoppingCartCont = styled.div`\n  margin-top: 100px;\n  display: flex;\n`;\n\nexport const LeftBlock = styled.div`\n  width: 50%;\n  border-right: 1px solid var(--blue-color);\n`;\n\nexport const RightBlock = styled.div`\n  width: 50%;\n`;","import * as yup from 'yup';\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\nconst phonePattern = /^\\d{10}$/;\n\nexport const formSchema = yup.object().shape({\n  name: yup.string().required('Required'),\n  email: yup\n    .string()\n    .matches(emailPattern, 'Error email. Example: test@gmail.com')\n    .required('Required'),\n  // password: yup\n  //   .string()\n  //   .min(6, 'Must be 6 or more characters')\n  //   .required('Required'),\n  phone: yup\n    .string()\n    .matches(phonePattern, 'Error phone. Example: 0971234567')\n    .required('Required'),\n  address: yup\n    .string()\n    .required('Required'),\n});\n","import { styled } from 'styled-components';\n\nexport const FormCont = styled('div')(() => {\n  return {\n    marginTop: '66px',\n    input: {\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'orange',\n      // color: 'var(--white-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--orange-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '18px',\n      marginBottom: '28px',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n    '.submit-btn': {\n      fontSize: '16px',\n      lineHeight: 1.12,\n      padding: '12px 40px',\n      // color: 'var(--white-color)',\n      borderRadius: '12px',\n\n      marginBottom: '12px',\n      backgroundColor: 'var(--orange-color)',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        backgroundColor: 'var(--light-orange-color)',\n      },\n      '&:disabled': {\n        color: 'rgba(239, 237, 232, 0.6)',\n        cursor: 'not-allowed',\n      },\n    },\n    '.navigate-cont': {\n      display: 'flex',\n      fontSize: '12px',\n    },\n    '.navigate-descr': {\n      opacity: 0.6,\n    },\n    '.navigate-link': {\n      textDecoration: 'underline',\n      transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        color: 'var(--light-orange-color)',\n      },\n    },\n    '@media screen and (min-width: 768px)': {\n      marginTop: '105px',\n      h1: {\n        fontSize: '32px',\n        lineHeight: 1.375,\n        marginBottom: '16px',\n      },\n      '.main-descr': {\n        width: '496px',\n        fontSize: '16px',\n        lineHeight: 1.5,\n        marginBottom: '32px',\n      },\n      input: {\n        fontSize: '16px',\n        lineHeight: 1.5,\n        width: '364px',\n        height: '52px',\n      },\n      '.inputs-cont': {\n        gap: '20px',\n        marginBottom: '64px',\n      },\n      '.eye-cont': {\n        width: 'fit-content',\n      },\n      '.eye-btn': {\n        top: '15px',\n      },\n      '.submit': {\n        fontSize: '20px',\n        lineHeight: 1.2,\n        padding: '16px 60px',\n      },\n      '.navigate-cont': {\n        marginLeft: '5px',\n      },\n    },\n    '@media screen and (min-width: 1440px)': {\n      marginTop: '116px',\n    },\n  };\n});\n","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-checkbox-circle-fill\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3cbf61\",\n    style: {\n      fill: \"var(--color1, #3cbf61)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-red\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d80027\",\n    style: {\n      fill: \"var(--color1, #d80027)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.0be5c128f03b9af2dbc7f1314d28ee5c.svg\";\nexport { ForwardRef as ReactComponent };","import { useFormik } from 'formik';\nimport { formSchema } from '../../schemas/FormSchema/FormSchema';\nimport { FormCont } from './UserForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst UserForm = ({ registration }) => {\n\n  // const onSubmit = async ({ name, email, password }, actions) => {\n  //   registration({\n  //     name: name,\n  //     email: email,\n  //     password: password,\n  //   });\n  //   await new Promise(resolve => setTimeout(resolve, 1000));\n  // };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     name: '',\n  //     email: '',\n  //     password: '',\n  //   },\n  //   validationSchema: formSchema,\n  //   onSubmit,\n  // });\n\n    const onSubmit = async ({ name, email, phone, address }, actions) => {\n      registration({\n        name: name,\n        email: email,\n        phone: phone,\n        address: address,\n      });\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    };\n\n    const formik = useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n      },\n      validationSchema: formSchema,\n      onSubmit,\n    });\n\n  return (\n    <FormCont>\n      <div>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"inputs-cont\">\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.name &&\n                  formik.touched.name &&\n                  formik.values.name.length > 0\n                    ? 'input-error'\n                    : formik.touched.name && formik.values.name.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n\n              {!formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success name</p>\n                  </div>\n                )}\n              {formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">{formik.errors.name}</p>\n                  </div>\n                )}\n            </div>\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.email &&\n                  formik.touched.email &&\n                  formik.values.email.length > 0\n                    ? 'input-error'\n                    : formik.touched.email && formik.values.email.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n\n              {!formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success email</p>\n                  </div>\n                )}\n              {formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">{formik.errors.email}</p>\n                  </div>\n                )}\n            </div>\n            {/* <div>\n              <input\n                autoComplete=\"off\"\n                name=\"password\"\n                type=\"text\"\n                placeholder=\"Password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.password &&\n                  formik.touched.password &&\n                  formik.values.password.length > 0\n                    ? 'input-error'\n                    : formik.touched.password &&\n                      formik.values.password.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n\n              {!formik.errors.password &&\n                formik.touched.password &&\n                formik.values.password.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success password</p>\n                  </div>\n                )}\n              {formik.errors.password &&\n                formik.touched.password &&\n                formik.values.password.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">\n                      {formik.errors.password}\n                    </p>\n                  </div>\n                )}\n            </div> */}\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"phone\"\n                type=\"tel\"\n                placeholder=\"Phone\"\n                value={formik.values.phone}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.phone &&\n                  formik.touched.phone &&\n                  formik.values.phone.length > 0\n                    ? 'input-error'\n                    : formik.touched.phone && formik.values.phone.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n\n              {!formik.errors.phone &&\n                formik.touched.phone &&\n                formik.values.phone.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success phone</p>\n                  </div>\n                )}\n              {formik.errors.phone &&\n                formik.touched.phone &&\n                formik.values.phone.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">{formik.errors.phone}</p>\n                  </div>\n                )}\n            </div>\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"address\"\n                type=\"text\"\n                placeholder=\"Address\"\n                value={formik.values.address}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.address &&\n                  formik.touched.address &&\n                  formik.values.address.length > 0\n                    ? 'input-error'\n                    : formik.touched.address &&\n                      formik.values.address.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n\n              {!formik.errors.address &&\n                formik.touched.address &&\n                formik.values.address.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success address</p>\n                  </div>\n                )}\n              {formik.errors.address &&\n                formik.touched.address &&\n                formik.values.address.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">\n                      {formik.errors.address}\n                    </p>\n                  </div>\n                )}\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"submit-btn\"\n            disabled={formik.isSubmitting}\n          >\n            Sign Up\n          </button>\n        </form>\n      </div>\n    </FormCont>\n  );\n};\n\nexport default UserForm;\n","import {\n  ShoppingCartCont,\n  LeftBlock,\n  RightBlock,\n} from './ShoppingCartPage.styled';\nimport {\n  CardContainer,\n  CardImage,\n  CardTitle,\n  AddButton,\n  CardList,\n  ShopHeader,\n} from '../ShopsPage/ShopsPage.styled';\nimport placeholder from '../../images/stock-illustration-drugs-and-pills.jpg';\nimport UserForm from 'components/UserForm/UserForm';\n\nconst ShoppingCartPage = () => {\n  return (\n    <ShoppingCartCont>\n      <LeftBlock>\n        <UserForm />\n      </LeftBlock>\n      <RightBlock>\n        <ShopHeader>Товари</ShopHeader>\n        <CardList>\n          <CardContainer>\n            <CardImage src={placeholder} alt='img' />\n            <CardTitle>name</CardTitle>\n            <AddButton>Додати</AddButton>\n          </CardContainer>\n        </CardList>\n      </RightBlock>\n    </ShoppingCartCont>\n  );\n};\n\nexport default ShoppingCartPage","// ShopsPage.styled.js\nimport styled from 'styled-components';\n\nexport const ShopsCont = styled.div`\n  margin-top: 100px;\n  display: flex;\n`;\n\nexport const LeftBlock = styled.div`\n  width: 25%;\n  border-right: 1px solid var(--blue-color);\n`;\n\nexport const RightBlock = styled.div`\n  width: 75%;\n`;\n\nexport const ShopHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const ShopList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ShopItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  color: var(--white-color);\n  border-radius: 12px;\n  padding: 12px 0;\n  background-color: var(--sky-blue-color);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  margin-bottom: 10px;\n  &:hover {\n    background-color: var(--blue-color);\n  }\n`;\n\nexport const CardList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CardContainer = styled.div`\n  width: 400px;\n  height: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  max-height: 70%;\n  object-fit: cover;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 18px;\n  margin: 15px 0;\n`;\n\nexport const AddButton = styled.button`\n  margin-bottom: 15px;\n  font-family: 'ManropeSemiBold';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  color: var(--white-color);\n  border-radius: 12px;\n  padding: 12px 50px;\n  background-color: var(--sky-blue-color);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: var(--blue-color);\n  }\n`;\n"],"names":["ShoppingCartCont","styled","_templateObject","_taggedTemplateLiteral","LeftBlock","_templateObject2","RightBlock","_templateObject3","formSchema","yup","shape","name","required","email","matches","phone","address","FormCont","marginTop","input","fontSize","lineHeight","width","height","border","borderRadius","backgroundColor","textIndent","outline","paddingTop","transition","borderColor","display","flexDirection","gap","marginBottom","alignItems","letterSpacing","color","padding","cursor","opacity","textDecoration","h1","top","marginLeft","_ref","registration","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","actions","_context","prev","next","Promise","resolve","setTimeout","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","validationSchema","_jsx","children","_jsxs","handleSubmit","className","autoComplete","type","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","errors","touched","length","viewBox","href","concat","sprite","disabled","isSubmitting","UserForm","ShopHeader","CardList","CardContainer","CardImage","src","alt","CardTitle","AddButton","ShopsCont","_templateObject4","ShopList","_templateObject5","ShopItem","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11"],"sourceRoot":""}