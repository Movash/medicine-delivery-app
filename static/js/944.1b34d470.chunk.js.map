{"version":3,"file":"static/js/944.1b34d470.chunk.js","mappings":"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","sources":["images/sprite.svg","api/Pharmacy.api.js","helpers/storage.js","pages/ShoppingCartPage/ShoppingCartPage.styled.js","components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","schemas/FormSchema/FormSchema.js","components/ShoppingCartItem/ShoppingCartItem.styled.js","components/ShoppingCartItem/ShoppingCartItem.jsx","components/ShoppingCartList/ShoppingCartList.styled.js","components/ShoppingCartList/ShoppingCartList.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx","styles/MainComponents/MainComponents.styled.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-checkbox-circle-fill\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3cbf61\",\n    style: {\n      fill: \"var(--color1, #3cbf61)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-red\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d80027\",\n    style: {\n      fill: \"var(--color1, #d80027)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.707 24.293c0.181 0.181 0.293 0.431 0.293 0.707 0 0.553-0.448 1.001-1.001 1.001-0.276 0-0.526-0.112-0.707-0.293l-8.293-8.294-8.293 8.294c-0.181 0.181-0.431 0.293-0.707 0.293-0.553 0-1.001-0.448-1.001-1.001 0-0.276 0.112-0.526 0.293-0.707v0l8.294-8.293-8.294-8.293c-0.181-0.181-0.293-0.431-0.293-0.707 0-0.553 0.448-1.001 1.001-1.001 0.276 0 0.526 0.112 0.708 0.293l8.292 8.294 8.293-8.294c0.181-0.181 0.431-0.293 0.707-0.293 0.553 0 1.001 0.448 1.001 1.001 0 0.276-0.112 0.526-0.293 0.708v0l-8.294 8.292z\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-heart-normal\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.133 24.733l-0.133 0.133-0.147-0.133c-6.333-5.747-10.52-9.547-10.52-13.4 0-2.667 2-4.667 4.667-4.667 2.053 0 4.053 1.333 4.76 3.147h2.48c0.707-1.813 2.707-3.147 4.76-3.147 2.667 0 4.667 2 4.667 4.667 0 3.853-4.187 7.653-10.533 13.4zM22 4c-2.32 0-4.547 1.080-6 2.773-1.453-1.693-3.68-2.773-6-2.773-4.107 0-7.333 3.213-7.333 7.333 0 5.027 4.533 9.147 11.4 15.373l1.933 1.76 1.933-1.76c6.867-6.227 11.4-10.347 11.4-15.373 0-4.12-3.227-7.333-7.333-7.333z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-heart-active\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 28.467l-1.933-1.76c-6.867-6.227-11.4-10.347-11.4-15.373 0-4.12 3.227-7.333 7.333-7.333 2.32 0 4.547 1.080 6 2.773 1.453-1.693 3.68-2.773 6-2.773 4.107 0 7.333 3.213 7.333 7.333 0 5.027-4.533 9.147-11.4 15.373z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.43412f926b759648a03fb442a9290726.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://nodejs-medicine-delivery.onrender.com';\n\nexport async function getAll() {\n  const { data } = await axios.get(`/api/drugstores`);\n  return data;\n}\n\nexport async function addOrder(body) {\n  try {\n    const { data } = await axios.post(`/users`, body);\n    toast.success('Your order has been accepted', {\n      duration: 3000,\n      position: 'top-center',\n    });\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong', {\n      duration: 3000,\n      position: 'top-center',\n    });\n    throw error;\n  }\n}\n\n","const setStorageData = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst getStorageData = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport { setStorageData, getStorageData };\n","import styled from 'styled-components';\n\nexport const ShoppingCartCont = styled.div`\n  margin-top: 60px;\n`;\n\nexport const ContentCartCont = styled.div`\n  display: flex;\n  height: calc(85vh - 60px);\n  border-bottom: 3px solid var(--sky-blue-color);\n`;\n\nexport const LeftBlock = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const RightBlock = styled.div`\n  height: 100%;\n  width: 50%;\n  background-color: var(--gray-color);\n  border-left: 3px solid var(--sky-blue-color);\n`;\n\nexport const AdditionalBlock = styled.div`\n  height: 15vh;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const SelectedTotal = styled.p`\n  margin-right: 200px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.43;\n`;\n\nexport const SubmitButton = styled.button`\n  margin-right: 50px;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.43;\n  color: var(--white-color);\n  border-radius: 16px;\n  padding: 12px 100px;\n  background-color: var(--sky-blue-color);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: var(--blue-color);\n  }\n  &:disabled {\n    color: var(--disabled-text-color);\n    background-color: var(--disabled-color);\n    cursor: not-allowed;\n  }\n`;\n\nexport const SelectedTotalNumber = styled.span`\n  color: var(--sky-blue-color);\n`;\n","import { styled } from 'styled-components';\n\nexport const FormCont = styled('div')(() => {\n  return {\n    input: {\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'var(--second-gray-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--active-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '30px',\n      width: '100%',\n    },\n    '.input-cont': {\n      width: '50%',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n  };\n});\n","import { FormCont } from './UserForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst UserForm = ({ formik }) => {\n\n  return (\n    <FormCont>\n      <form id=\"userForm\" onSubmit={formik.handleSubmit}>\n        <div className=\"inputs-cont\">\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name*\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0\n                  ? 'input-error'\n                  : formik.touched.name && formik.values.name.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.name &&\n              formik.touched.name &&\n              formik.values.name.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success name</p>\n                </div>\n              )}\n            {formik.errors.name &&\n              formik.touched.name &&\n              formik.values.name.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.name}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email*\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0\n                  ? 'input-error'\n                  : formik.touched.email && formik.values.email.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.email &&\n              formik.touched.email &&\n              formik.values.email.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success email</p>\n                </div>\n              )}\n            {formik.errors.email &&\n              formik.touched.email &&\n              formik.values.email.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.email}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"phone\"\n              type=\"tel\"\n              placeholder=\"Phone*\"\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.phone &&\n                formik.touched.phone &&\n                formik.values.phone.length > 0\n                  ? 'input-error'\n                  : formik.touched.phone && formik.values.phone.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.phone &&\n              formik.touched.phone &&\n              formik.values.phone.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success phone</p>\n                </div>\n              )}\n            {formik.errors.phone &&\n              formik.touched.phone &&\n              formik.values.phone.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.phone}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"address\"\n              type=\"text\"\n              placeholder=\"Address*\"\n              value={formik.values.address}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.address &&\n                formik.touched.address &&\n                formik.values.address.length > 0\n                  ? 'input-error'\n                  : formik.touched.address && formik.values.address.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.address &&\n              formik.touched.address &&\n              formik.values.address.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success address</p>\n                </div>\n              )}\n            {formik.errors.address &&\n              formik.touched.address &&\n              formik.values.address.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.address}</p>\n                </div>\n              )}\n          </div>\n        </div>\n      </form>\n    </FormCont>\n  );\n};\n\nexport default UserForm;\n","import * as yup from 'yup';\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\nconst phonePattern = /^\\d{10}$/;\n\nexport const formSchema = yup.object().shape({\n  name: yup.string().required('Required'),\n  email: yup\n    .string()\n    .matches(emailPattern, 'Error email. Example: test@gmail.com')\n    .required('Required'),\n  phone: yup\n    .string()\n    .matches(phonePattern, 'Error phone. Example: 0971234567')\n    .required('Required'),\n  address: yup\n    .string()\n    .required('Required'),\n});\n","import styled from \"styled-components\";\n\nexport const SelectedCartContainer = styled.li`\n  position: relative;\n  width: 750px;\n  height: 350px;\n  display: flex;\n  align-items: center;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background-color: var(--white-color);\n  margin: 10px;\n`;\n\nexport const XButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: var(--white-color);\n  margin-top: 10px;\n  margin-right: 8px;\n`;\n\nexport const SelectedCartImage = styled.img`\n  width: 60%;\n  height: 310px;\n  margin-left: 20px;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const CartTitleCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 40%;\n  height: 100%;\n`;\n\nexport const Price = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.5;\n  margin-bottom: 20px;\n`;\n\nexport const CountCont = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100px;\n  height: 50px;\n  border-radius: 15px;\n  background-color: var(--gray-color);\n  border: 1px solid var(--black-color);\n`;\n\nexport const CountNumber = styled.p`\n  margin-left: 25px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.5;\n`;\n\nexport const ButtonsCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 15px;\n  color: var(--gray-color);\n`;\n\nexport const CounterButton = styled.button`\n  border-radius: 10px;\n  background-color: var(--gray-color);\n`;","import { CartTitle } from 'styles/MainComponents/MainComponents.styled';\nimport {\n  ButtonsCont,\n  CartTitleCont,\n  CountCont,\n  CountNumber,\n  CounterButton,\n  Price,\n  SelectedCartContainer,\n  SelectedCartImage,\n  XButton,\n} from './ShoppingCartItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport placeholder from '../../images/stock-illustration-drugs-and-pills.jpg';\nimport { setStorageData } from 'helpers/storage';\n\nconst baseURL = 'https://nodejs-medicine-delivery.onrender.com';\n\nconst ShoppingCartItem = ({ medicine, index, handleRemoveFromCart, setCartItems, cartItems }) => {\n\n  const handleAddOne = () => {\n    const updatedCartItems = [...cartItems];\n    updatedCartItems[index].count = (updatedCartItems[index].count || 1) + 1;\n    setCartItems(updatedCartItems);\n    setStorageData('cartItems', updatedCartItems);\n  };\n\n  const handleSubtractOne = () => {\n    if (medicine.count > 1) {\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[index].count = Math.max(\n        updatedCartItems[index].count - 1,\n        1\n      );\n      setCartItems(updatedCartItems);\n      setStorageData('cartItems', updatedCartItems);\n    }\n  };\n\n  return (\n    <SelectedCartContainer>\n      <XButton onClick={() => handleRemoveFromCart(index)}>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 16 16\">\n          <use href={`${sprite}#icon-x`} />\n        </svg>\n      </XButton>\n      <SelectedCartImage\n        src={medicine.photo ? `${baseURL}/${medicine.photo}` : placeholder}\n        alt={medicine.name}\n      />\n      <CartTitleCont>\n        <CartTitle>\n          {medicine.name.charAt(0).toUpperCase() + medicine.name.slice(1)}\n        </CartTitle>\n        <Price>Price: {medicine.price * (medicine.count || 1)}$</Price>\n        <CountCont>\n          <CountNumber>{medicine.count || 1}</CountNumber>\n          <ButtonsCont>\n            <CounterButton onClick={() => handleAddOne()}>⬆</CounterButton>\n            <CounterButton onClick={() => handleSubtractOne()}>⬇</CounterButton>\n          </ButtonsCont>\n        </CountCont>\n      </CartTitleCont>\n    </SelectedCartContainer>\n  );\n};\n\nexport default ShoppingCartItem;\n","import styled from \"styled-components\";\n\nexport const SelectedCartList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  overflow-y: auto;\n  height: calc(100% - 87.6px);\n`;\n","import ShoppingCartItem from \"components/ShoppingCartItem/ShoppingCartItem\";\nimport { SelectedCartList } from \"./ShoppingCartList.styled\";\n\nconst ShoppingCartList = (props) => {\n  const { cartItems, handleRemoveFromCart, setCartItems } = props;\n\n  return (\n    <SelectedCartList>\n      {cartItems.map((medicine, index) => (\n        <ShoppingCartItem\n          medicine={medicine}\n          key={medicine._id}\n          index={index}\n          handleRemoveFromCart={handleRemoveFromCart}\n          cartItems={cartItems}\n          setCartItems={setCartItems}\n        />\n      ))}\n    </SelectedCartList>\n  );\n}\n\nexport default ShoppingCartList","import {\n  ShoppingCartCont,\n  LeftBlock,\n  RightBlock,\n  AdditionalBlock,\n  ContentCartCont,\n  SubmitButton,\n  SelectedTotal,\n  SelectedTotalNumber,\n} from './ShoppingCartPage.styled';\nimport UserForm from 'components/UserForm/UserForm';\nimport { useEffect, useState } from 'react';\nimport { getStorageData, setStorageData } from 'helpers/storage';\nimport { useFormik } from 'formik';\nimport { formSchema } from 'schemas/FormSchema/FormSchema';\nimport { addOrder } from 'api/Pharmacy.api';\nimport { ShopHeader } from 'styles/MainComponents/MainComponents.styled';\nimport ShoppingCartList from 'components/ShoppingCartList/ShoppingCartList';\n\nconst ShoppingCartPage = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    const storedCartItems = getStorageData('cartItems') || [];\n    setCartItems(storedCartItems);\n  }, []);\n\n  useEffect(() => {\n    const calculateTotalPrice = () => {\n      let totalPrice = 0;\n      cartItems.forEach(item => {\n        totalPrice += item.price * (item.count || 1);\n      });\n      return totalPrice;\n    };\n    const totalPrice = calculateTotalPrice();\n    setTotalPrice(totalPrice);\n  }, [cartItems]);\n\n  const handleRemoveFromCart = index => {\n    const updatedCartItems = [...cartItems];\n    updatedCartItems.splice(index, 1);\n    setCartItems(updatedCartItems);\n    setStorageData('cartItems', updatedCartItems);\n  };\n  \n  const onSubmit = async ({ name, email, phone, address }, actions) => {\n    const orderedMedicines = cartItems.map(item => ({\n      medicine: item.name,\n      quantity: item.count || 1,\n      price: item.price * (item.count || 1),\n    }));\n\n    const body = {\n      name: name,\n      email: email,\n      phone: phone,\n      address: address,\n      orderedMedicines: orderedMedicines,\n      totalPrice: totalPrice,\n    };\n\n    await addOrder(body)\n    \n    await new Promise(resolve => setTimeout(resolve, 1000));\n    actions.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n    },\n    validationSchema: formSchema,\n    onSubmit,\n  });\n\n  return (\n    <ShoppingCartCont>\n      <ContentCartCont>\n        <LeftBlock>\n          <UserForm formik={formik} />\n        </LeftBlock>\n        <RightBlock>\n          <ShopHeader>Selected drugs</ShopHeader>\n          <ShoppingCartList\n            cartItems={cartItems}\n            handleRemoveFromCart={handleRemoveFromCart}\n            setCartItems={setCartItems}\n          />\n        </RightBlock>\n      </ContentCartCont>\n      <AdditionalBlock>\n        <SelectedTotal>\n          Total price: <SelectedTotalNumber>{totalPrice}$</SelectedTotalNumber>\n        </SelectedTotal>\n        <SubmitButton\n          type=\"submit\"\n          disabled={formik.isSubmitting}\n          form=\"userForm\"\n        >\n          Submit\n        </SubmitButton>\n      </AdditionalBlock>\n    </ShoppingCartCont>\n  );\n};\n\nexport default ShoppingCartPage;\n","import styled from 'styled-components';\n\nexport const ShopHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const CartTitle = styled.h3`\n  font-size: 18px;\n  margin: 15px 0;\n  font-weight: 600;\n  font-size: 28px;\n`;\n"],"names":["getAll","_getAll","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","stop","addOrder","_x","_addOrder","_callee2","body","_yield$axios$post","_context2","toast","duration","position","t0","setStorageData","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getStorageData","getItem","undefined","parse","ShoppingCartCont","styled","_templateObject","_taggedTemplateLiteral","ContentCartCont","_templateObject2","LeftBlock","_templateObject3","RightBlock","_templateObject4","AdditionalBlock","_templateObject5","SelectedTotal","_templateObject6","SubmitButton","_templateObject7","SelectedTotalNumber","_templateObject8","FormCont","input","fontSize","lineHeight","width","height","border","borderRadius","backgroundColor","textIndent","outline","paddingTop","transition","borderColor","display","flexDirection","alignItems","gap","marginTop","letterSpacing","color","_ref","formik","_jsx","children","id","onSubmit","handleSubmit","_jsxs","className","autoComplete","name","type","placeholder","values","onChange","handleChange","onBlur","handleBlur","errors","touched","length","viewBox","href","concat","sprite","email","phone","address","formSchema","yup","shape","required","matches","SelectedCartContainer","XButton","SelectedCartImage","CartTitleCont","Price","CountCont","CountNumber","ButtonsCont","CounterButton","_templateObject9","medicine","index","handleRemoveFromCart","setCartItems","cartItems","onClick","src","photo","alt","CartTitle","charAt","toUpperCase","slice","price","count","updatedCartItems","_toConsumableArray","handleAddOne","Math","max","handleSubtractOne","SelectedCartList","props","map","ShoppingCartItem","_id","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","totalPrice","setTotalPrice","useEffect","storedCartItems","forEach","item","calculateTotalPrice","_ref2","actions","orderedMedicines","quantity","Promise","resolve","setTimeout","resetForm","_x2","useFormik","initialValues","validationSchema","UserForm","ShopHeader","ShoppingCartList","splice","disabled","isSubmitting","form"],"sourceRoot":""}