{"version":3,"file":"static/js/829.ee2d974e.chunk.js","mappings":"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","sources":["helpers/storage.js","pages/ShoppingCartPage/ShoppingCartPage.styled.js","schemas/FormSchema/FormSchema.js","components/UserForm/UserForm.styled.js","images/sprite.svg","components/UserForm/UserForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx","pages/ShopsPage/ShopsPage.styled.js"],"sourcesContent":["const setStorageData = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst getStorageData = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport { setStorageData, getStorageData };\n","import styled from 'styled-components';\n\nexport const ShoppingCartCont = styled.div`\n  margin-top: 100px;\n  display: flex;\n`;\n\nexport const LeftBlock = styled.div`\n  width: 50%;\n  border-right: 1px solid var(--blue-color);\n`;\n\nexport const RightBlock = styled.div`\n  width: 50%;\n`;\n\nexport const SelectedCardContainer = styled.div`\n  position: relative;\n  width: 750px;\n  height: 350px;\n  display: flex;\n  align-items: center;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const SelectedCardImage = styled.img`\n  width: 60%;\n  height: 310px;\n  margin-left: 20px;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const CardTitleCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 40%;\n  height: 100%;\n`;\n\nexport const Price = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  letter-spacing: 1.5;\n  margin-bottom: 20px;\n`;\n\nexport const CountCont = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100px;\n  height: 50px;\n  border-radius: 15px;\n  background-color: var(--gray-color);\n  border: 1px solid var(--black-color);\n`;\n\nexport const CountNumber = styled.p`\n  margin-left: 25px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.5;\n`;\n\nexport const ButtonsCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 15px;\n  color: var(--gray-color);\n`;\n\nexport const CounterButton = styled.button`\n  border-radius: 10px;\n  background-color: var(--gray-color);\n`;\n\nexport const XButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: var(--white-color);\n  margin-top: 10px;\n  margin-right: 8px;\n`;\n","import * as yup from 'yup';\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\nconst phonePattern = /^\\d{10}$/;\n\nexport const formSchema = yup.object().shape({\n  name: yup.string().required('Required'),\n  email: yup\n    .string()\n    .matches(emailPattern, 'Error email. Example: test@gmail.com')\n    .required('Required'),\n  phone: yup\n    .string()\n    .matches(phonePattern, 'Error phone. Example: 0971234567')\n    .required('Required'),\n  address: yup\n    .string()\n    .required('Required'),\n});\n","import { styled } from 'styled-components';\n\nexport const FormCont = styled('div')(() => {\n  return {\n    marginTop: '100px',\n    form: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    input: {\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'var(--light-active-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--orange-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '18px',\n      marginBottom: '28px',\n      width: '100%',\n    },\n    '.input-cont': {\n      width: '60%',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n    '.submit-btn': {\n      fontSize: '16px',\n      lineHeight: 1.12,\n      padding: '12px 40px',\n      borderRadius: '12px',\n      marginBottom: '12px',\n      backgroundColor: 'var(--light-active-color)',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        backgroundColor: 'var(--active-color)',\n      },\n      // '&:disabled': {\n      //   color: 'rgba(239, 237, 232, 0.6)',\n      //   cursor: 'not-allowed',\n      // },\n    },\n  };\n});\n","var _symbol;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-checkbox-circle-fill\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3cbf61\",\n    style: {\n      fill: \"var(--color1, #3cbf61)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-red\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d80027\",\n    style: {\n      fill: \"var(--color1, #d80027)\"\n    },\n    d: \"M16 29.333c-7.364 0-13.333-5.969-13.333-13.333s5.969-13.333 13.333-13.333c7.364 0 13.333 5.969 13.333 13.333s-5.969 13.333-13.333 13.333zM14.459 21.98l9.427-9.428-1.885-1.885-7.541 7.543-3.772-3.772-1.885 1.885 5.657 5.657z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.707 24.293c0.181 0.181 0.293 0.431 0.293 0.707 0 0.553-0.448 1.001-1.001 1.001-0.276 0-0.526-0.112-0.707-0.293l-8.293-8.294-8.293 8.294c-0.181 0.181-0.431 0.293-0.707 0.293-0.553 0-1.001-0.448-1.001-1.001 0-0.276 0.112-0.526 0.293-0.707v0l8.294-8.293-8.294-8.293c-0.181-0.181-0.293-0.431-0.293-0.707 0-0.553 0.448-1.001 1.001-1.001 0.276 0 0.526 0.112 0.708 0.293l8.292 8.294 8.293-8.294c0.181-0.181 0.431-0.293 0.707-0.293 0.553 0 1.001 0.448 1.001 1.001 0 0.276-0.112 0.526-0.293 0.708v0l-8.294 8.292z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.e9c6daee75be6752fba4cf081aa0e747.svg\";\nexport { ForwardRef as ReactComponent };","import { useFormik } from 'formik';\nimport { formSchema } from '../../schemas/FormSchema/FormSchema';\nimport { FormCont } from './UserForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst UserForm = () => {\n  const onSubmit = ({ name, email, phone, address }, actions) => {\n    console.log(name);\n    console.log(email);\n    console.log(phone);\n    console.log(address);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n    },\n    validationSchema: formSchema,\n    onSubmit,\n  });\n\n  return (\n    <FormCont>\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"inputs-cont\">\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0\n                  ? 'input-error'\n                  : formik.touched.name && formik.values.name.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.name &&\n              formik.touched.name &&\n              formik.values.name.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success name</p>\n                </div>\n              )}\n            {formik.errors.name &&\n              formik.touched.name &&\n              formik.values.name.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.name}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0\n                  ? 'input-error'\n                  : formik.touched.email && formik.values.email.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.email &&\n              formik.touched.email &&\n              formik.values.email.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success email</p>\n                </div>\n              )}\n            {formik.errors.email &&\n              formik.touched.email &&\n              formik.values.email.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.email}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"phone\"\n              type=\"tel\"\n              placeholder=\"Phone\"\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.phone &&\n                formik.touched.phone &&\n                formik.values.phone.length > 0\n                  ? 'input-error'\n                  : formik.touched.phone && formik.values.phone.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.phone &&\n              formik.touched.phone &&\n              formik.values.phone.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success phone</p>\n                </div>\n              )}\n            {formik.errors.phone &&\n              formik.touched.phone &&\n              formik.values.phone.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.phone}</p>\n                </div>\n              )}\n          </div>\n          <div className=\"input-cont\">\n            <input\n              autoComplete=\"off\"\n              name=\"address\"\n              type=\"text\"\n              placeholder=\"Address\"\n              value={formik.values.address}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                formik.errors.address &&\n                formik.touched.address &&\n                formik.values.address.length > 0\n                  ? 'input-error'\n                  : formik.touched.address && formik.values.address.length > 0\n                  ? 'input-success'\n                  : ''\n              }\n            />\n\n            {!formik.errors.address &&\n              formik.touched.address &&\n              formik.values.address.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success address</p>\n                </div>\n              )}\n            {formik.errors.address &&\n              formik.touched.address &&\n              formik.values.address.length > 0 && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.address}</p>\n                </div>\n              )}\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"submit-btn\"\n          disabled={formik.isSubmitting}\n        >\n          Submit\n        </button>\n      </form>\n    </FormCont>\n  );\n};\n\nexport default UserForm;\n","import {\n  ShoppingCartCont,\n  LeftBlock,\n  RightBlock,\n  SelectedCardContainer,\n  SelectedCardImage,\n  CardTitleCont,\n  CountCont,\n  ButtonsCont,\n  CounterButton,\n  CountNumber,\n  XButton,\n  Price,\n} from './ShoppingCartPage.styled';\nimport { CardTitle, CardList, ShopHeader } from '../ShopsPage/ShopsPage.styled';\nimport placeholder from '../../images/stock-illustration-drugs-and-pills.jpg';\nimport UserForm from 'components/UserForm/UserForm';\nimport { useEffect, useState } from 'react';\nimport { getStorageData, setStorageData } from 'helpers/storage';\nimport sprite from '../../images/sprite.svg';\n\nconst baseURL = 'https://nodejs-medicine-delivery.onrender.com';\n\nconst ShoppingCartPage = () => {\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    const storedCartItems = getStorageData('cartItems') || [];\n    setCartItems(storedCartItems);\n  }, []);\n\n    const handleAddOne = index => {\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[index].count++;\n      setCartItems(updatedCartItems);\n      setStorageData('cartItems', updatedCartItems);\n    };\n\n  const handleSubtractOne = index => {\n    const updatedCartItems = [...cartItems];\n    updatedCartItems[index].count = Math.max(\n      updatedCartItems[index].count - 1,\n      1\n    );\n    setCartItems(updatedCartItems);\n    setStorageData('cartItems', updatedCartItems);\n  };\n\n  const handleRemoveFromCart = index => {\n    const updatedCartItems = [...cartItems];\n    updatedCartItems.splice(index, 1);\n    setCartItems(updatedCartItems);\n    setStorageData('cartItems', updatedCartItems);\n  };\n\n  return (\n    <ShoppingCartCont>\n      <LeftBlock>\n        <UserForm />\n      </LeftBlock>\n      <RightBlock>\n        <ShopHeader>Selected drugs</ShopHeader>\n        <CardList>\n          {cartItems.map((medicine, index) => (\n            <SelectedCardContainer key={medicine._id}>\n              <XButton onClick={() => handleRemoveFromCart(index)}>\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 16 16\">\n                  <use href={`${sprite}#icon-x`} />\n                </svg>\n              </XButton>\n              <SelectedCardImage\n                src={\n                  medicine.photo ? `${baseURL}/${medicine.photo}` : placeholder\n                }\n                alt={medicine.name}\n              />\n              <CardTitleCont>\n                <CardTitle>\n                  {medicine.name.charAt(0).toUpperCase() +\n                    medicine.name.slice(1)}\n                </CardTitle>\n                <Price>Price: {medicine.price * (medicine.count || 1)}$</Price>\n                <CountCont>\n                  <CountNumber>{medicine.count}</CountNumber>\n                  <ButtonsCont>\n                    <CounterButton onClick={() => handleAddOne(index)}>\n                      ⬆\n                    </CounterButton>\n                    <CounterButton onClick={() => handleSubtractOne(index)}>\n                      ⬇\n                    </CounterButton>\n                  </ButtonsCont>\n                </CountCont>\n              </CardTitleCont>\n            </SelectedCardContainer>\n          ))}\n        </CardList>\n      </RightBlock>\n    </ShoppingCartCont>\n  );\n};\n\nexport default ShoppingCartPage;\n","import styled from 'styled-components';\n\nexport const ShopsCont = styled.div`\n  margin-top: 100px;\n  display: flex;\n`;\n\nexport const LeftBlock = styled.div`\n  width: 25%;\n  border-right: 1px solid var(--blue-color);\n`;\n\nexport const RightBlock = styled.div`\n  width: 75%;\n`;\n\nexport const ShopHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const ShopList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ShopItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  color: var(--white-color);\n  border-radius: 12px;\n  padding: 12px 0;\n  background-color: var(--sky-blue-color);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  margin-bottom: 10px;\n  &:hover {\n    background-color: var(--blue-color);\n  }\n`;\n\nexport const CardList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CardContainer = styled.div`\n  width: 400px;\n  height: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  height: 230px;\n  object-fit: cover;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 18px;\n  margin: 15px 0;\n`;\n\nexport const AddButton = styled.button`\n  margin-bottom: 15px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  color: var(--white-color);\n  border-radius: 12px;\n  padding: 12px 50px;\n  background-color: var(--sky-blue-color);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: var(--blue-color);\n  }\n`;\n"],"names":["setStorageData","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getStorageData","getItem","undefined","parse","ShoppingCartCont","styled","_templateObject","_taggedTemplateLiteral","LeftBlock","_templateObject2","RightBlock","_templateObject3","SelectedCardContainer","_templateObject4","SelectedCardImage","_templateObject5","CardTitleCont","_templateObject6","Price","_templateObject7","CountCont","_templateObject8","CountNumber","_templateObject9","ButtonsCont","_templateObject10","CounterButton","_templateObject11","XButton","_templateObject12","formSchema","yup","shape","name","required","email","matches","phone","address","FormCont","marginTop","form","width","display","flexDirection","alignItems","input","fontSize","lineHeight","height","border","borderRadius","backgroundColor","textIndent","outline","paddingTop","transition","borderColor","gap","marginBottom","letterSpacing","color","padding","formik","useFormik","initialValues","validationSchema","onSubmit","_ref","actions","log","_jsx","children","_jsxs","handleSubmit","className","autoComplete","type","placeholder","values","onChange","handleChange","onBlur","handleBlur","errors","touched","length","viewBox","href","concat","sprite","disabled","isSubmitting","_useState","useState","_useState2","_slicedToArray","cartItems","setCartItems","useEffect","storedCartItems","UserForm","ShopHeader","CardList","map","medicine","index","onClick","updatedCartItems","_toConsumableArray","splice","handleRemoveFromCart","src","photo","alt","CardTitle","charAt","toUpperCase","slice","price","count","handleAddOne","Math","max","handleSubtractOne","_id","ShopsCont","ShopList","ShopItem","CardContainer","CardImage","AddButton"],"sourceRoot":""}